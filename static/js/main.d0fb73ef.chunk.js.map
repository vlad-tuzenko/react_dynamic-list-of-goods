{"version":3,"sources":["api/goods.ts","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["wait","delay","Promise","resolve","setTimeout","getAll","a","fetch","response","ok","Error","status","json","get5First","goods","sort","b","name","localeCompare","slice","getRedGoods","filter","item","color","GoodsList","className","map","classNames","id","App","state","isLoading","loadingErr","loadGoods","request","setState","this","type","onClick","console","log","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2RAGMA,G,MAAO,SAACC,GACZ,OAAO,IAAIC,SAAQ,SAACC,GAClBC,WAAWD,EAASF,QAIXI,EAAM,uCAAG,4BAAAC,EAAA,sEACdN,EAAK,KADS,uBAGGO,MAXZ,yEAQS,WAGdC,EAHc,QAKNC,GALM,sBAMZ,IAAIC,MAAJ,wBAA2BF,EAASG,SANxB,gCASbH,EAASI,QATI,2CAAH,qDAYNC,EAAS,uCAAG,4BAAAP,EAAA,sEACHD,IADG,cACjBS,EADiB,yBAGhBA,EAAMC,MAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAEW,KAAKC,cAAcF,EAAEC,SAAOE,MAAM,EAAG,IAH5C,2CAAH,qDAMTC,EAAW,uCAAG,4BAAAd,EAAA,sEACLD,IADK,cACnBS,EADmB,yBAGlBA,EAAMO,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,UAHR,2CAAH,qD,+BCnBXC,EAA6B,SAAC,GAAe,IAAbV,EAAY,EAAZA,MAC3C,OACE,oBAAIW,UAAU,8BAAd,SACGX,EAAMY,KAAI,SAAAJ,GAAI,OACb,oBACEG,UAAWE,IAAW,kBAAD,2BAAwCL,EAAKC,QADpE,SAIGD,EAAKL,MAFDK,EAAKM,UCDdC,E,4MACJC,MAAQ,CACNhB,MAAO,GACPiB,WAAW,EACXC,YAAY,G,EAGdC,U,uCAAY,WAAOC,GAAP,eAAA5B,EAAA,6DACV,EAAK6B,SAAS,CACZrB,MAAO,GACPkB,YAAY,EACZD,WAAW,IAJH,kBAQYG,IARZ,OAQFpB,EARE,OAUR,EAAKqB,SAAS,CACZrB,UAXM,gDAcR,EAAKqB,SAAS,CAAEH,YAAY,IAdpB,yBAgBR,EAAKG,SAAS,CAAEJ,WAAW,IAhBnB,4E,kGAoBZ,WAA2B,IAAD,OACxB,EAAyCK,KAAKN,MAAtChB,EAAR,EAAQA,MAAOkB,EAAf,EAAeA,WAAYD,EAA3B,EAA2BA,UAE3B,OACE,sBAAKN,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mCACA,sBAAKA,UAAU,eAAf,UACE,wBAAQY,KAAK,SAASC,QAAS,kBAAM,EAAKL,UAAU5B,IAApD,4BAGA,wBAAQgC,KAAK,SAASC,QAAS,kBAAM,EAAKL,UAAUpB,IAApD,gCAGA,wBAAQwB,KAAK,SAASC,QAAS,kBAAM,EAAKL,UAAUb,IAApD,4BAGCmB,QAAQC,IAAIJ,KAAKN,MAAMhB,UAE1B,sBAAKW,UAAU,eAAf,UACGM,GACC,qBAAKN,UAAU,uBAAf,qCAEgB,IAAjBX,EAAM2B,QACL,cAAC,EAAD,CAAW3B,MAAOsB,KAAKN,MAAMhB,QAE9BkB,GACC,qBAAKP,UAAU,qBAAf,qE,GArDMiB,IAAMC,WA6DTd,ICvEfe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d0fb73ef.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nconst wait = (delay: number): Promise<typeof delay> => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\nexport const getAll = async (): Promise<Good[]> => {\n  await wait(1000);\n\n  const response = await fetch(API_URL);\n\n  if (!response.ok) {\n    throw new Error(`Ooops. Error: ${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const get5First = async () => {\n  const goods = await getAll();\n\n  return goods.sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const goods = await getAll();\n\n  return goods.filter(item => item.color === 'red');\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"App__content-list GoodsList\">\n      {goods.map(item => (\n        <li\n          className={classNames('GoodsList__item', `GoodsList__item--${item.color}`)}\n          key={item.id}\n        >\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\n\ntype State = {\n  goods: Good[];\n  isLoading: boolean;\n  loadingErr: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n    isLoading: false,\n    loadingErr: false,\n  };\n\n  loadGoods = async (request: () => Promise<Good[]>) => {\n    this.setState({\n      goods: [],\n      loadingErr: false,\n      isLoading: true,\n    });\n\n    try {\n      const goods = await request();\n\n      this.setState({\n        goods,\n      });\n    } catch (error) {\n      this.setState({ loadingErr: true });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render(): React.ReactNode {\n    const { goods, loadingErr, isLoading } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Dynamic list of Goods</h1>\n        <div className=\"App__buttons\">\n          <button type=\"button\" onClick={() => this.loadGoods(getAll)}>\n            Load All goods\n          </button>\n          <button type=\"button\" onClick={() => this.loadGoods(get5First)}>\n            Load 5 first goods\n          </button>\n          <button type=\"button\" onClick={() => this.loadGoods(getRedGoods)}>\n            Load red goods\n          </button>\n          {console.log(this.state.goods)}\n        </div>\n        <div className=\"App__content\">\n          {isLoading && (\n            <div className=\"App__content-loading\">Loading... Please, wait</div>\n          )}\n          {goods.length !== 0 && (\n            <GoodsList goods={this.state.goods} />\n          )}\n          {loadingErr && (\n            <div className=\"App__content-error\">Sorry... We have some error with loading list</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}